   1               		.file	"rs485_slave.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	rs485_tx
  13               	rs485_tx:
  14               	.LFB2:
  15               		.file 1 "src/rs485_slave.c"
   1:src/rs485_slave.c **** #include <avr/io.h>
   2:src/rs485_slave.c **** #include <avr/eeprom.h>
   3:src/rs485_slave.c **** #include <string.h>
   4:src/rs485_slave.c **** #include "rs485_slave.h"
   5:src/rs485_slave.c **** #include "uart.h"
   6:src/rs485_slave.c **** 
   7:src/rs485_slave.c **** uint16_t stored_id EEMEM;
   8:src/rs485_slave.c **** uint16_t id=0xFFFF;
   9:src/rs485_slave.c **** uint32_t clock=0;
  10:src/rs485_slave.c **** uint32_t autoreset=0;
  11:src/rs485_slave.c **** 
  12:src/rs485_slave.c **** static void process_byte(uint8_t b);
  13:src/rs485_slave.c **** static void process_new_id(uint16_t new_id);
  14:src/rs485_slave.c **** static uint16_t calc_checksum(uint8_t *data, uint16_t length);
  15:src/rs485_slave.c **** static void process_message(uint16_t msg_id, uint8_t length, uint8_t* data);
  16:src/rs485_slave.c **** 
  17:src/rs485_slave.c **** msg_complete_update_t msgstore_complete_update;
  18:src/rs485_slave.c **** 
  19:src/rs485_slave.c **** void rs485_init(void)
  20:src/rs485_slave.c **** {
  21:src/rs485_slave.c ****     uart1_init( UART_BAUD_SELECT(RS485_BAUD,F_CPU) );
  22:src/rs485_slave.c ****     RS485_CTL_DDR |= (1<<RS485_RX) | (1<<RS485_TX);
  23:src/rs485_slave.c ****     rs485_rx();
  24:src/rs485_slave.c **** 
  25:src/rs485_slave.c ****     id = eeprom_read_word(&stored_id);
  26:src/rs485_slave.c **** 
  27:src/rs485_slave.c ****     if(id==0xFFFF)
  28:src/rs485_slave.c ****         uart_puts("No ID configured, waiting for ID\r\n");
  29:src/rs485_slave.c ****     else
  30:src/rs485_slave.c ****         uart_puts("Found ID\r\n");
  31:src/rs485_slave.c **** 
  32:src/rs485_slave.c **** }
  33:src/rs485_slave.c **** 
  34:src/rs485_slave.c **** void rs485_tx(void)
  35:src/rs485_slave.c **** {
  16               		.loc 1 35 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  36:src/rs485_slave.c ****     //Activate transmitter and deactivate receiver
  37:src/rs485_slave.c ****     RS485_CTL_PORT|=(1<<RS485_RX) | (1<<RS485_TX);
  22               		.loc 1 37 0
  23 0000 88B1      		in r24,0x8
  24 0002 8063      		ori r24,lo8(48)
  25 0004 88B9      		out 0x8,r24
  26 0006 0895      		ret
  27               		.cfi_endproc
  28               	.LFE2:
  30               	.global	rs485_tx_autoreset
  32               	rs485_tx_autoreset:
  33               	.LFB3:
  38:src/rs485_slave.c **** }
  39:src/rs485_slave.c **** 
  40:src/rs485_slave.c **** void rs485_tx_autoreset(uint8_t ms)
  41:src/rs485_slave.c **** {
  34               		.loc 1 41 0
  35               		.cfi_startproc
  36               	.LVL0:
  37 0008 CF93      		push r28
  38               	.LCFI0:
  39               		.cfi_def_cfa_offset 3
  40               		.cfi_offset 28, -2
  41               	/* prologue: function */
  42               	/* frame size = 0 */
  43               	/* stack size = 1 */
  44               	.L__stack_usage = 1
  45 000a C82F      		mov r28,r24
  42:src/rs485_slave.c ****     rs485_tx();
  46               		.loc 1 42 0
  47 000c 0E94 0000 		call rs485_tx
  48               	.LVL1:
  43:src/rs485_slave.c ****     autoreset=clock+ms;
  49               		.loc 1 43 0
  50 0010 8091 0000 		lds r24,clock
  51 0014 9091 0000 		lds r25,clock+1
  52 0018 A091 0000 		lds r26,clock+2
  53 001c B091 0000 		lds r27,clock+3
  54 0020 8C0F      		add r24,r28
  55 0022 911D      		adc r25,__zero_reg__
  56 0024 A11D      		adc r26,__zero_reg__
  57 0026 B11D      		adc r27,__zero_reg__
  58 0028 8093 0000 		sts autoreset,r24
  59 002c 9093 0000 		sts autoreset+1,r25
  60 0030 A093 0000 		sts autoreset+2,r26
  61 0034 B093 0000 		sts autoreset+3,r27
  62               	/* epilogue start */
  44:src/rs485_slave.c **** }
  63               		.loc 1 44 0
  64 0038 CF91      		pop r28
  65               	.LVL2:
  66 003a 0895      		ret
  67               		.cfi_endproc
  68               	.LFE3:
  70               	.global	rs485_rx
  72               	rs485_rx:
  73               	.LFB4:
  45:src/rs485_slave.c **** 
  46:src/rs485_slave.c **** void rs485_rx(void)
  47:src/rs485_slave.c **** {
  74               		.loc 1 47 0
  75               		.cfi_startproc
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 0 */
  79               	.L__stack_usage = 0
  48:src/rs485_slave.c ****     //Deactivate transmitter and activate receiver
  49:src/rs485_slave.c ****     RS485_CTL_PORT&=~((1<<RS485_RX) | (1<<RS485_TX));
  80               		.loc 1 49 0
  81 003c 88B1      		in r24,0x8
  82 003e 8F7C      		andi r24,lo8(-49)
  83 0040 88B9      		out 0x8,r24
  84 0042 0895      		ret
  85               		.cfi_endproc
  86               	.LFE4:
  88               		.section	.rodata.str1.1,"aMS",@progbits,1
  89               	.LC0:
  90 0000 4E6F 2049 		.string	"No ID configured, waiting for ID\r\n"
  90      4420 636F 
  90      6E66 6967 
  90      7572 6564 
  90      2C20 7761 
  91               	.LC1:
  92 0023 466F 756E 		.string	"Found ID\r\n"
  92      6420 4944 
  92      0D0A 00
  93               		.text
  94               	.global	rs485_init
  96               	rs485_init:
  97               	.LFB1:
  20:src/rs485_slave.c ****     uart1_init( UART_BAUD_SELECT(RS485_BAUD,F_CPU) );
  98               		.loc 1 20 0
  99               		.cfi_startproc
 100               	/* prologue: function */
 101               	/* frame size = 0 */
 102               	/* stack size = 0 */
 103               	.L__stack_usage = 0
  21:src/rs485_slave.c ****     RS485_CTL_DDR |= (1<<RS485_RX) | (1<<RS485_TX);
 104               		.loc 1 21 0
 105 0044 88E0      		ldi r24,lo8(8)
 106 0046 90E0      		ldi r25,0
 107 0048 0E94 0000 		call uart1_init
 108               	.LVL3:
  22:src/rs485_slave.c ****     rs485_rx();
 109               		.loc 1 22 0
 110 004c 87B1      		in r24,0x7
 111 004e 8063      		ori r24,lo8(48)
 112 0050 87B9      		out 0x7,r24
  23:src/rs485_slave.c **** 
 113               		.loc 1 23 0
 114 0052 0E94 0000 		call rs485_rx
 115               	.LVL4:
  25:src/rs485_slave.c **** 
 116               		.loc 1 25 0
 117 0056 80E0      		ldi r24,lo8(stored_id)
 118 0058 90E0      		ldi r25,hi8(stored_id)
 119 005a 0E94 0000 		call eeprom_read_word
 120               	.LVL5:
 121 005e 9093 0000 		sts id+1,r25
 122 0062 8093 0000 		sts id,r24
  27:src/rs485_slave.c ****         uart_puts("No ID configured, waiting for ID\r\n");
 123               		.loc 1 27 0
 124 0066 0196      		adiw r24,1
 125 0068 01F4      		brne .L5
  28:src/rs485_slave.c ****     else
 126               		.loc 1 28 0
 127 006a 80E0      		ldi r24,lo8(.LC0)
 128 006c 90E0      		ldi r25,hi8(.LC0)
 129 006e 00C0      		rjmp .L6
 130               	.L5:
  30:src/rs485_slave.c **** 
 131               		.loc 1 30 0
 132 0070 80E0      		ldi r24,lo8(.LC1)
 133 0072 90E0      		ldi r25,hi8(.LC1)
 134               	.L6:
 135 0074 0C94 0000 		jmp uart_puts
 136               	.LVL6:
 137               		.cfi_endproc
 138               	.LFE1:
 140               		.section	.rodata.str1.1
 141               	.LC2:
 142 002e 476F 7420 		.string	"Got package start\r\n"
 142      7061 636B 
 142      6167 6520 
 142      7374 6172 
 142      740D 0A00 
 143               	.LC3:
 144 0042 5265 6365 		.string	"Received package ID: %u\r\n"
 144      6976 6564 
 144      2070 6163 
 144      6B61 6765 
 144      2049 443A 
 145               	.LC4:
 146 005c 4967 6E6F 		.string	"Ignoring the next 5 bytes\r\n"
 146      7269 6E67 
 146      2074 6865 
 146      206E 6578 
 146      7420 3520 
 147               	.LC5:
 148 0078 4967 6E6F 		.string	"Ignoring the next bytes because\r\n"
 148      7269 6E67 
 148      2074 6865 
 148      206E 6578 
 148      7420 6279 
 149               	.LC6:
 150 009a 5265 6365 		.string	"Receiving data\r\n"
 150      6976 696E 
 150      6720 6461 
 150      7461 0D0A 
 150      00
 151               	.LC7:
 152 00ab 6861 7665 		.string	"have to send\r\n"
 152      2074 6F20 
 152      7365 6E64 
 152      0D0A 00
 153               	.LC8:
 154 00ba 5072 6F63 		.string	"Processing Message "
 154      6573 7369 
 154      6E67 204D 
 154      6573 7361 
 154      6765 2000 
 155               	.LC9:
 156 00ce 4E6F 2025 		.string	"No %u, length: %u\r\n"
 156      752C 206C 
 156      656E 6774 
 156      683A 2025 
 156      750D 0A00 
 157               	.LC10:
 158 00e2 5365 7474 		.string	"Setting new ID: %u\r\n"
 158      696E 6720 
 158      6E65 7720 
 158      4944 3A20 
 158      2575 0D0A 
 159               		.text
 160               	.global	rs485_run
 162               	rs485_run:
 163               	.LFB5:
  50:src/rs485_slave.c **** }
  51:src/rs485_slave.c **** 
  52:src/rs485_slave.c **** void rs485_run(void)
  53:src/rs485_slave.c **** {
 164               		.loc 1 53 0
 165               		.cfi_startproc
 166 0078 CF92      		push r12
 167               	.LCFI1:
 168               		.cfi_def_cfa_offset 3
 169               		.cfi_offset 12, -2
 170 007a DF92      		push r13
 171               	.LCFI2:
 172               		.cfi_def_cfa_offset 4
 173               		.cfi_offset 13, -3
 174 007c EF92      		push r14
 175               	.LCFI3:
 176               		.cfi_def_cfa_offset 5
 177               		.cfi_offset 14, -4
 178 007e FF92      		push r15
 179               	.LCFI4:
 180               		.cfi_def_cfa_offset 6
 181               		.cfi_offset 15, -5
 182 0080 0F93      		push r16
 183               	.LCFI5:
 184               		.cfi_def_cfa_offset 7
 185               		.cfi_offset 16, -6
 186 0082 1F93      		push r17
 187               	.LCFI6:
 188               		.cfi_def_cfa_offset 8
 189               		.cfi_offset 17, -7
 190 0084 CF93      		push r28
 191               	.LCFI7:
 192               		.cfi_def_cfa_offset 9
 193               		.cfi_offset 28, -8
 194 0086 DF93      		push r29
 195               	.LCFI8:
 196               		.cfi_def_cfa_offset 10
 197               		.cfi_offset 29, -9
 198 0088 CDB7      		in r28,__SP_L__
 199 008a DEB7      		in r29,__SP_H__
 200               	.LCFI9:
 201               		.cfi_def_cfa_register 28
 202 008c ED97      		sbiw r28,61
 203               	.LCFI10:
 204               		.cfi_def_cfa_offset 71
 205 008e 0FB6      		in __tmp_reg__,__SREG__
 206 0090 F894      		cli
 207 0092 DEBF      		out __SP_H__,r29
 208 0094 0FBE      		out __SREG__,__tmp_reg__
 209 0096 CDBF      		out __SP_L__,r28
 210               	/* prologue: function */
 211               	/* frame size = 61 */
 212               	/* stack size = 69 */
 213               	.L__stack_usage = 69
  54:src/rs485_slave.c ****     clock++;
 214               		.loc 1 54 0
 215 0098 8091 0000 		lds r24,clock
 216 009c 9091 0000 		lds r25,clock+1
 217 00a0 A091 0000 		lds r26,clock+2
 218 00a4 B091 0000 		lds r27,clock+3
 219 00a8 0196      		adiw r24,1
 220 00aa A11D      		adc r26,__zero_reg__
 221 00ac B11D      		adc r27,__zero_reg__
 222 00ae 8093 0000 		sts clock,r24
 223 00b2 9093 0000 		sts clock+1,r25
 224 00b6 A093 0000 		sts clock+2,r26
 225 00ba B093 0000 		sts clock+3,r27
  55:src/rs485_slave.c **** 
  56:src/rs485_slave.c ****     if(clock==autoreset)
 226               		.loc 1 56 0
 227 00be 4091 0000 		lds r20,autoreset
 228 00c2 5091 0000 		lds r21,autoreset+1
 229 00c6 6091 0000 		lds r22,autoreset+2
 230 00ca 7091 0000 		lds r23,autoreset+3
 231 00ce 8417      		cp r24,r20
 232 00d0 9507      		cpc r25,r21
 233 00d2 A607      		cpc r26,r22
 234 00d4 B707      		cpc r27,r23
 235 00d6 01F4      		brne .L9
  57:src/rs485_slave.c ****         rs485_rx();
 236               		.loc 1 57 0
 237 00d8 0E94 0000 		call rs485_rx
 238               	.LVL7:
 239               	.L9:
  58:src/rs485_slave.c **** 
  59:src/rs485_slave.c **** 
  60:src/rs485_slave.c **** 
  61:src/rs485_slave.c ****     unsigned int c= uart1_getc();
 240               		.loc 1 61 0
 241 00dc 0E94 0000 		call uart1_getc
 242               	.LVL8:
 243 00e0 9C01      		movw r18,r24
 244 00e2 2227      		clr r18
 245 00e4 3571      		andi r19,21
  62:src/rs485_slave.c **** 
  63:src/rs485_slave.c **** 
  64:src/rs485_slave.c ****     if (! ( c & UART_NO_DATA) )
  65:src/rs485_slave.c ****     {
  66:src/rs485_slave.c ****         if(c & UART_FRAME_ERROR)
  67:src/rs485_slave.c ****         {
  68:src/rs485_slave.c **** 
  69:src/rs485_slave.c ****         }
  70:src/rs485_slave.c ****         else if(c & UART_PARITY_ERROR)
 246               		.loc 1 70 0
 247 00e6 232B      		or r18,r19
 248 00e8 01F0      		breq .+2
 249 00ea 00C0      		rjmp .L8
 250               	.LVL9:
 251               	.LBB16:
 252               	.LBB17:
  71:src/rs485_slave.c ****         {
  72:src/rs485_slave.c **** 
  73:src/rs485_slave.c ****         }
  74:src/rs485_slave.c ****         else
  75:src/rs485_slave.c ****         {
  76:src/rs485_slave.c ****             process_byte(c);
  77:src/rs485_slave.c ****         }
  78:src/rs485_slave.c ****     }
  79:src/rs485_slave.c **** }
  80:src/rs485_slave.c **** 
  81:src/rs485_slave.c **** typedef enum {
  82:src/rs485_slave.c ****     WAITING_FOR_START,
  83:src/rs485_slave.c ****     WAIT_ID,
  84:src/rs485_slave.c ****     WAIT_NEW_ID,
  85:src/rs485_slave.c ****     WAIT_MSG_INFO,
  86:src/rs485_slave.c ****     WAIT_DATA,
  87:src/rs485_slave.c ****     IGNORE_BYTES
  88:src/rs485_slave.c **** } state_t;
  89:src/rs485_slave.c **** 
  90:src/rs485_slave.c **** static void process_byte(uint8_t b)
  91:src/rs485_slave.c **** {
  92:src/rs485_slave.c ****     char t[50];
  93:src/rs485_slave.c ****   //  sprintf(t,"R: %d\r\n",b);
  94:src/rs485_slave.c ****   //  uart_puts(t);
  95:src/rs485_slave.c **** 
  96:src/rs485_slave.c ****     static state_t state = WAITING_FOR_START;
  97:src/rs485_slave.c ****     static uint8_t multibytecounter=0;
  98:src/rs485_slave.c ****     static uint16_t ignorecounter;
  99:src/rs485_slave.c ****     static uint16_t package_id=0;
 100:src/rs485_slave.c ****     static uint16_t new_id;
 101:src/rs485_slave.c ****     static uint16_t msg_id;
 102:src/rs485_slave.c ****     static uint8_t type;
 103:src/rs485_slave.c ****     static uint8_t length;
 104:src/rs485_slave.c ****     static uint8_t data[257]; //255 + 2 Byte checksum
 105:src/rs485_slave.c **** 
 106:src/rs485_slave.c ****     switch(state)
 253               		.loc 1 106 0
 254 00ec 1091 0000 		lds r17,state.1924
 255 00f0 1230      		cpi r17,lo8(2)
 256 00f2 01F4      		brne .+2
 257 00f4 00C0      		rjmp .L12
 258 00f6 00F4      		brsh .L13
 259 00f8 1123      		tst r17
 260 00fa 01F0      		breq .L14
 261 00fc 1130      		cpi r17,lo8(1)
 262 00fe 01F0      		breq .L15
 263 0100 00C0      		rjmp .L8
 264               	.L13:
 265 0102 1430      		cpi r17,lo8(4)
 266 0104 01F4      		brne .+2
 267 0106 00C0      		rjmp .L16
 268 0108 00F4      		brsh .+2
 269 010a 00C0      		rjmp .L17
 270 010c 1530      		cpi r17,lo8(5)
 271 010e 01F4      		brne .+2
 272 0110 00C0      		rjmp .L18
 273 0112 00C0      		rjmp .L8
 274               	.L14:
 107:src/rs485_slave.c ****     {
 108:src/rs485_slave.c ****         case WAITING_FOR_START:
 109:src/rs485_slave.c ****             if(b==0xAA)
 275               		.loc 1 109 0
 276 0114 8A3A      		cpi r24,lo8(-86)
 277 0116 01F0      		breq .+2
 278 0118 00C0      		rjmp .L8
 110:src/rs485_slave.c ****             {
 111:src/rs485_slave.c ****                 uart_puts("Got package start\r\n");
 279               		.loc 1 111 0
 280 011a 80E0      		ldi r24,lo8(.LC2)
 281 011c 90E0      		ldi r25,hi8(.LC2)
 282               	.LVL10:
 283 011e 0E94 0000 		call uart_puts
 284               	.LVL11:
 112:src/rs485_slave.c ****                 state = WAIT_ID;
 285               		.loc 1 112 0
 286 0122 81E0      		ldi r24,lo8(1)
 287 0124 00C0      		rjmp .L41
 288               	.LVL12:
 289               	.L15:
 113:src/rs485_slave.c ****                 multibytecounter=0;
 114:src/rs485_slave.c ****             }
 115:src/rs485_slave.c ****         break;
 116:src/rs485_slave.c ****         case WAIT_ID:
 117:src/rs485_slave.c ****             if(multibytecounter==0)
 290               		.loc 1 117 0
 291 0126 2091 0000 		lds r18,multibytecounter.1925
 292 012a 9927      		clr r25
 293               	.LVL13:
 294 012c 2111      		cpse r18,__zero_reg__
 295 012e 00C0      		rjmp .L20
 118:src/rs485_slave.c ****             {
 119:src/rs485_slave.c ****                 package_id=b<<8;
 296               		.loc 1 119 0
 297 0130 1092 0000 		sts package_id.1927,__zero_reg__
 298 0134 8093 0000 		sts package_id.1927+1,r24
 120:src/rs485_slave.c ****                 multibytecounter++;
 299               		.loc 1 120 0
 300 0138 1093 0000 		sts multibytecounter.1925,r17
 301 013c 00C0      		rjmp .L8
 302               	.L20:
 303               	.LBB18:
 121:src/rs485_slave.c ****             }
 122:src/rs485_slave.c ****             else
 123:src/rs485_slave.c ****             {
 124:src/rs485_slave.c ****                 package_id|=b;
 304               		.loc 1 124 0
 305 013e 2091 0000 		lds r18,package_id.1927
 306 0142 3091 0000 		lds r19,package_id.1927+1
 307 0146 822B      		or r24,r18
 308 0148 932B      		or r25,r19
 309 014a 9093 0000 		sts package_id.1927+1,r25
 310 014e 8093 0000 		sts package_id.1927,r24
 125:src/rs485_slave.c ****                 sprintf(t,"Received package ID: %u\r\n",package_id);
 311               		.loc 1 125 0
 312 0152 9F93      		push r25
 313 0154 8F93      		push r24
 314 0156 80E0      		ldi r24,lo8(.LC3)
 315 0158 90E0      		ldi r25,hi8(.LC3)
 316 015a 9F93      		push r25
 317 015c 8F93      		push r24
 318 015e 8E01      		movw r16,r28
 319 0160 0F5F      		subi r16,-1
 320 0162 1F4F      		sbci r17,-1
 321 0164 1F93      		push r17
 322 0166 0F93      		push r16
 323 0168 0E94 0000 		call sprintf
 324               	.LVL14:
 126:src/rs485_slave.c ****                 uart_puts(t);
 325               		.loc 1 126 0
 326 016c C801      		movw r24,r16
 327 016e 0E94 0000 		call uart_puts
 328               	.LVL15:
 127:src/rs485_slave.c ****                 if(package_id == 0xFFFF)
 329               		.loc 1 127 0
 330 0172 0F90      		pop __tmp_reg__
 331 0174 0F90      		pop __tmp_reg__
 332 0176 0F90      		pop __tmp_reg__
 333 0178 0F90      		pop __tmp_reg__
 334 017a 0F90      		pop __tmp_reg__
 335 017c 0F90      		pop __tmp_reg__
 336 017e 8091 0000 		lds r24,package_id.1927
 337 0182 9091 0000 		lds r25,package_id.1927+1
 338 0186 0196      		adiw r24,1
 339 0188 01F4      		brne .L21
 128:src/rs485_slave.c ****                 {
 129:src/rs485_slave.c ****                     if(id == 0xFFFF)
 340               		.loc 1 129 0
 341 018a 8091 0000 		lds r24,id
 342 018e 9091 0000 		lds r25,id+1
 343 0192 0196      		adiw r24,1
 344 0194 01F4      		brne .L22
 130:src/rs485_slave.c ****                     {
 131:src/rs485_slave.c ****                         state = WAIT_NEW_ID;
 345               		.loc 1 131 0
 346 0196 82E0      		ldi r24,lo8(2)
 347               	.L41:
 348 0198 8093 0000 		sts state.1924,r24
 132:src/rs485_slave.c ****                         multibytecounter=0;
 349               		.loc 1 132 0
 350 019c 1092 0000 		sts multibytecounter.1925,__zero_reg__
 351 01a0 00C0      		rjmp .L8
 352               	.L22:
 133:src/rs485_slave.c ****                     }
 134:src/rs485_slave.c ****                     else
 135:src/rs485_slave.c ****                     {
 136:src/rs485_slave.c ****                         state=IGNORE_BYTES;
 353               		.loc 1 136 0
 354 01a2 85E0      		ldi r24,lo8(5)
 355 01a4 8093 0000 		sts state.1924,r24
 137:src/rs485_slave.c ****                         ignorecounter=5;
 356               		.loc 1 137 0
 357 01a8 85E0      		ldi r24,lo8(5)
 358 01aa 90E0      		ldi r25,0
 359 01ac 9093 0000 		sts ignorecounter.1926+1,r25
 360 01b0 8093 0000 		sts ignorecounter.1926,r24
 138:src/rs485_slave.c ****                         uart_puts("Ignoring the next 5 bytes\r\n");
 361               		.loc 1 138 0
 362 01b4 80E0      		ldi r24,lo8(.LC4)
 363 01b6 90E0      		ldi r25,hi8(.LC4)
 364 01b8 00C0      		rjmp .L42
 365               	.L21:
 139:src/rs485_slave.c ****                     }
 140:src/rs485_slave.c ****                 }
 141:src/rs485_slave.c ****                 else
 142:src/rs485_slave.c ****                 {
 143:src/rs485_slave.c ****                     state=WAIT_MSG_INFO;
 366               		.loc 1 143 0
 367 01ba 83E0      		ldi r24,lo8(3)
 368 01bc 8093 0000 		sts state.1924,r24
 144:src/rs485_slave.c ****                     multibytecounter=0;
 369               		.loc 1 144 0
 370 01c0 1092 0000 		sts multibytecounter.1925,__zero_reg__
 145:src/rs485_slave.c ****                     msg_id=0;
 371               		.loc 1 145 0
 372 01c4 1092 0000 		sts msg_id.1929+1,__zero_reg__
 373 01c8 1092 0000 		sts msg_id.1929,__zero_reg__
 374 01cc 00C0      		rjmp .L8
 375               	.LVL16:
 376               	.L17:
 377               	.LBE18:
 146:src/rs485_slave.c **** 
 147:src/rs485_slave.c ****                 }
 148:src/rs485_slave.c ****             }
 149:src/rs485_slave.c ****         break;
 150:src/rs485_slave.c **** 
 151:src/rs485_slave.c ****         case WAIT_MSG_INFO:
 152:src/rs485_slave.c ****             switch(multibytecounter)
 378               		.loc 1 152 0
 379 01ce 2091 0000 		lds r18,multibytecounter.1925
 380 01d2 2130      		cpi r18,lo8(1)
 381 01d4 01F0      		breq .L24
 382 01d6 00F0      		brlo .L25
 383 01d8 2230      		cpi r18,lo8(2)
 384 01da 01F0      		breq .L26
 385 01dc 2330      		cpi r18,lo8(3)
 386 01de 01F4      		brne .L23
 153:src/rs485_slave.c ****             {
 154:src/rs485_slave.c ****             case 0: msg_id=b<<8; break;
 155:src/rs485_slave.c ****             case 1: msg_id|=b; break;
 156:src/rs485_slave.c ****             case 2: type=b; break;
 157:src/rs485_slave.c ****             case 3: length=b; break;
 387               		.loc 1 157 0
 388 01e0 8093 0000 		sts length.1931,r24
 389 01e4 00C0      		rjmp .L23
 390               	.L25:
 154:src/rs485_slave.c ****             case 1: msg_id|=b; break;
 391               		.loc 1 154 0
 392 01e6 1092 0000 		sts msg_id.1929,__zero_reg__
 393 01ea 8093 0000 		sts msg_id.1929+1,r24
 394 01ee 00C0      		rjmp .L23
 395               	.L24:
 155:src/rs485_slave.c ****             case 2: type=b; break;
 396               		.loc 1 155 0
 397 01f0 4091 0000 		lds r20,msg_id.1929
 398 01f4 5091 0000 		lds r21,msg_id.1929+1
 399 01f8 FA01      		movw r30,r20
 400 01fa E82B      		or r30,r24
 401 01fc CF01      		movw r24,r30
 402               	.LVL17:
 403 01fe 9093 0000 		sts msg_id.1929+1,r25
 404 0202 8093 0000 		sts msg_id.1929,r24
 405 0206 00C0      		rjmp .L23
 406               	.LVL18:
 407               	.L26:
 156:src/rs485_slave.c ****             case 3: length=b; break;
 408               		.loc 1 156 0
 409 0208 8093 0000 		sts type.1930,r24
 410               	.LVL19:
 411               	.L23:
 158:src/rs485_slave.c ****             }
 159:src/rs485_slave.c **** 
 160:src/rs485_slave.c ****             multibytecounter++;
 412               		.loc 1 160 0
 413 020c 2F5F      		subi r18,lo8(-(1))
 414 020e 2093 0000 		sts multibytecounter.1925,r18
 161:src/rs485_slave.c ****             if(multibytecounter>3)
 415               		.loc 1 161 0
 416 0212 2430      		cpi r18,lo8(4)
 417 0214 00F4      		brsh .+2
 418 0216 00C0      		rjmp .L8
 162:src/rs485_slave.c ****             {
 163:src/rs485_slave.c ****                 if(package_id!=id) //package not for us
 419               		.loc 1 163 0
 420 0218 2091 0000 		lds r18,package_id.1927
 421 021c 3091 0000 		lds r19,package_id.1927+1
 422 0220 8091 0000 		lds r24,id
 423 0224 9091 0000 		lds r25,id+1
 424 0228 2817      		cp r18,r24
 425 022a 3907      		cpc r19,r25
 426 022c 01F0      		breq .L29
 164:src/rs485_slave.c ****                 {
 165:src/rs485_slave.c ****                     uart_puts("Ignoring the next bytes because\r\n");
 427               		.loc 1 165 0
 428 022e 80E0      		ldi r24,lo8(.LC5)
 429 0230 90E0      		ldi r25,hi8(.LC5)
 430 0232 0E94 0000 		call uart_puts
 431               	.LVL20:
 166:src/rs485_slave.c ****                     ignorecounter=length;
 432               		.loc 1 166 0
 433 0236 8091 0000 		lds r24,length.1931
 434 023a 90E0      		ldi r25,0
 435 023c 9093 0000 		sts ignorecounter.1926+1,r25
 436 0240 8093 0000 		sts ignorecounter.1926,r24
 167:src/rs485_slave.c ****                     state= IGNORE_BYTES;
 437               		.loc 1 167 0
 438 0244 85E0      		ldi r24,lo8(5)
 439 0246 00C0      		rjmp .L44
 440               	.L29:
 168:src/rs485_slave.c ****                 }
 169:src/rs485_slave.c ****                 else //package for us
 170:src/rs485_slave.c ****                 {
 171:src/rs485_slave.c ****                     if(type==1) //master->slave transmit
 441               		.loc 1 171 0
 442 0248 8091 0000 		lds r24,type.1930
 443 024c 8130      		cpi r24,lo8(1)
 444 024e 01F4      		brne .L30
 172:src/rs485_slave.c ****                     {
 173:src/rs485_slave.c ****                         uart_puts("Receiving data\r\n");
 445               		.loc 1 173 0
 446 0250 80E0      		ldi r24,lo8(.LC6)
 447 0252 90E0      		ldi r25,hi8(.LC6)
 448 0254 0E94 0000 		call uart_puts
 449               	.LVL21:
 174:src/rs485_slave.c ****                         multibytecounter=0;
 450               		.loc 1 174 0
 451 0258 1092 0000 		sts multibytecounter.1925,__zero_reg__
 175:src/rs485_slave.c ****                         state = WAIT_DATA;
 452               		.loc 1 175 0
 453 025c 84E0      		ldi r24,lo8(4)
 454               	.L44:
 455 025e 8093 0000 		sts state.1924,r24
 456 0262 00C0      		rjmp .L8
 457               	.L30:
 176:src/rs485_slave.c ****                     }
 177:src/rs485_slave.c ****                     else
 178:src/rs485_slave.c ****                     {
 179:src/rs485_slave.c ****                         uart_puts("have to send\r\n");
 458               		.loc 1 179 0
 459 0264 80E0      		ldi r24,lo8(.LC7)
 460 0266 90E0      		ldi r25,hi8(.LC7)
 461               	.L42:
 462 0268 0E94 0000 		call uart_puts
 463               	.LVL22:
 464 026c 00C0      		rjmp .L8
 465               	.LVL23:
 466               	.L16:
 180:src/rs485_slave.c ****                     }
 181:src/rs485_slave.c **** 
 182:src/rs485_slave.c ****                 }
 183:src/rs485_slave.c ****             }
 184:src/rs485_slave.c **** 
 185:src/rs485_slave.c ****         break;
 186:src/rs485_slave.c **** 
 187:src/rs485_slave.c ****         case WAIT_DATA:
 188:src/rs485_slave.c ****             data[multibytecounter]=b;
 467               		.loc 1 188 0
 468 026e 9091 0000 		lds r25,multibytecounter.1925
 469 0272 E92F      		mov r30,r25
 470 0274 F0E0      		ldi r31,0
 471 0276 E050      		subi r30,lo8(-(data.1932))
 472 0278 F040      		sbci r31,hi8(-(data.1932))
 473 027a 8083      		st Z,r24
 189:src/rs485_slave.c **** 
 190:src/rs485_slave.c **** 
 191:src/rs485_slave.c ****             multibytecounter++;
 474               		.loc 1 191 0
 475 027c 81E0      		ldi r24,lo8(1)
 476               	.LVL24:
 477 027e 890F      		add r24,r25
 478 0280 8093 0000 		sts multibytecounter.1925,r24
 192:src/rs485_slave.c ****             if(multibytecounter>=length+2)
 479               		.loc 1 192 0
 480 0284 1091 0000 		lds r17,length.1931
 481 0288 212F      		mov r18,r17
 482 028a 30E0      		ldi r19,0
 483 028c 2F5F      		subi r18,-1
 484 028e 3F4F      		sbci r19,-1
 485 0290 90E0      		ldi r25,0
 486 0292 2817      		cp r18,r24
 487 0294 3907      		cpc r19,r25
 488 0296 04F0      		brlt .+2
 489 0298 00C0      		rjmp .L8
 193:src/rs485_slave.c ****             {
 194:src/rs485_slave.c ****                 process_message(msg_id,length,data);
 490               		.loc 1 194 0
 491 029a E090 0000 		lds r14,msg_id.1929
 492 029e F090 0000 		lds r15,msg_id.1929+1
 493               	.LVL25:
 494               	.LBB19:
 495               	.LBB20:
 195:src/rs485_slave.c **** 
 196:src/rs485_slave.c ****                 rs485_tx_autoreset(2);
 197:src/rs485_slave.c ****                 uart1_putc(0xAA);
 198:src/rs485_slave.c ****                 uart1_putc(data[length+0]);
 199:src/rs485_slave.c ****                 uart1_putc(data[length+1]);
 200:src/rs485_slave.c **** 
 201:src/rs485_slave.c ****                 state= WAITING_FOR_START;
 202:src/rs485_slave.c ****             }
 203:src/rs485_slave.c **** 
 204:src/rs485_slave.c **** 
 205:src/rs485_slave.c ****         break;
 206:src/rs485_slave.c **** 
 207:src/rs485_slave.c ****         case WAIT_NEW_ID:
 208:src/rs485_slave.c ****             if(multibytecounter==0)
 209:src/rs485_slave.c ****             {
 210:src/rs485_slave.c ****                 new_id=b<<8;
 211:src/rs485_slave.c ****                 multibytecounter++;
 212:src/rs485_slave.c ****             }
 213:src/rs485_slave.c ****             else
 214:src/rs485_slave.c ****             {
 215:src/rs485_slave.c ****                 new_id|=b;
 216:src/rs485_slave.c ****                 process_new_id(new_id);
 217:src/rs485_slave.c ****                 state=WAITING_FOR_START;
 218:src/rs485_slave.c ****             }
 219:src/rs485_slave.c **** 
 220:src/rs485_slave.c ****         break;
 221:src/rs485_slave.c **** 
 222:src/rs485_slave.c ****         case IGNORE_BYTES:
 223:src/rs485_slave.c ****             if(ignorecounter==0)
 224:src/rs485_slave.c ****                 state=WAITING_FOR_START;
 225:src/rs485_slave.c **** 
 226:src/rs485_slave.c ****             ignorecounter--;
 227:src/rs485_slave.c **** 
 228:src/rs485_slave.c ****         break;
 229:src/rs485_slave.c **** 
 230:src/rs485_slave.c ****     }
 231:src/rs485_slave.c **** }
 232:src/rs485_slave.c **** 
 233:src/rs485_slave.c **** static void process_new_id(uint16_t new_id)
 234:src/rs485_slave.c **** {
 235:src/rs485_slave.c ****     id = new_id;
 236:src/rs485_slave.c **** 
 237:src/rs485_slave.c ****     eeprom_write_word(&stored_id, id);
 238:src/rs485_slave.c ****     char t[50];
 239:src/rs485_slave.c ****     sprintf(t,"Setting new ID: %u\r\n",id);
 240:src/rs485_slave.c ****     uart_puts(t);
 241:src/rs485_slave.c **** 
 242:src/rs485_slave.c ****     uint8_t buffer[11];
 243:src/rs485_slave.c ****     buffer[0] = 0xAA;
 244:src/rs485_slave.c ****     buffer[1] = 0xFF;
 245:src/rs485_slave.c ****     buffer[2] = 0xFF;
 246:src/rs485_slave.c ****     buffer[3] = new_id>>8;
 247:src/rs485_slave.c ****     buffer[4] = new_id;
 248:src/rs485_slave.c ****     buffer[5] = new_id>>8;
 249:src/rs485_slave.c ****     buffer[6] = new_id;
 250:src/rs485_slave.c ****     buffer[7] = HW_TYPE>>8;
 251:src/rs485_slave.c ****     buffer[8] = HW_TYPE;
 252:src/rs485_slave.c ****     uint16_t checksum=calc_checksum(buffer,9);
 253:src/rs485_slave.c ****     buffer[9] = checksum>>8;
 254:src/rs485_slave.c ****     buffer[10] = checksum;
 255:src/rs485_slave.c **** 
 256:src/rs485_slave.c ****     rs485_tx_autoreset(2);
 257:src/rs485_slave.c ****     for(uint8_t i=5; i < 11; i++)
 258:src/rs485_slave.c ****     {
 259:src/rs485_slave.c ****         uart1_putc(buffer[i]);
 260:src/rs485_slave.c ****     }
 261:src/rs485_slave.c **** 
 262:src/rs485_slave.c **** }
 263:src/rs485_slave.c **** 
 264:src/rs485_slave.c **** static uint16_t calc_checksum(uint8_t *data, uint16_t length)
 265:src/rs485_slave.c **** {
 266:src/rs485_slave.c ****     uint16_t sum=0;
 267:src/rs485_slave.c **** 
 268:src/rs485_slave.c ****     for(uint16_t i=0; i < length; i++)
 269:src/rs485_slave.c ****     {
 270:src/rs485_slave.c ****         sum^= data[i];
 271:src/rs485_slave.c ****     }
 272:src/rs485_slave.c **** 
 273:src/rs485_slave.c ****     return sum;
 274:src/rs485_slave.c **** }
 275:src/rs485_slave.c **** 
 276:src/rs485_slave.c **** static void process_message(uint16_t msg_id, uint8_t length, uint8_t* data)
 277:src/rs485_slave.c **** {
 278:src/rs485_slave.c ****     char t[50];
 279:src/rs485_slave.c ****     uart_puts("Processing Message ");
 496               		.loc 1 279 0
 497 02a2 80E0      		ldi r24,lo8(.LC8)
 498 02a4 90E0      		ldi r25,hi8(.LC8)
 499 02a6 0E94 0000 		call uart_puts
 500               	.LVL26:
 280:src/rs485_slave.c **** 
 281:src/rs485_slave.c ****     sprintf(t,"No %u, length: %u\r\n",msg_id, length);
 501               		.loc 1 281 0
 502 02aa 1F92      		push __zero_reg__
 503 02ac 1F93      		push r17
 504 02ae FF92      		push r15
 505 02b0 EF92      		push r14
 506 02b2 80E0      		ldi r24,lo8(.LC9)
 507 02b4 90E0      		ldi r25,hi8(.LC9)
 508 02b6 9F93      		push r25
 509 02b8 8F93      		push r24
 510 02ba 8E01      		movw r16,r28
 511 02bc 0F5F      		subi r16,-1
 512 02be 1F4F      		sbci r17,-1
 513 02c0 1F93      		push r17
 514 02c2 0F93      		push r16
 515 02c4 0E94 0000 		call sprintf
 516               	.LVL27:
 282:src/rs485_slave.c ****     uart_puts(t);
 517               		.loc 1 282 0
 518 02c8 C801      		movw r24,r16
 519 02ca 0E94 0000 		call uart_puts
 520               	.LVL28:
 283:src/rs485_slave.c **** 
 284:src/rs485_slave.c ****     if(msg_id == 2)
 521               		.loc 1 284 0
 522 02ce 0FB6      		in __tmp_reg__,__SREG__
 523 02d0 F894      		cli
 524 02d2 DEBF      		out __SP_H__,r29
 525 02d4 0FBE      		out __SREG__,__tmp_reg__
 526 02d6 CDBF      		out __SP_L__,r28
 527 02d8 72E0      		ldi r23,2
 528 02da E716      		cp r14,r23
 529 02dc F104      		cpc r15,__zero_reg__
 530 02de 01F0      		breq .L31
 531               	.L33:
 532               	.LBE20:
 533               	.LBE19:
 196:src/rs485_slave.c ****                 uart1_putc(0xAA);
 534               		.loc 1 196 0
 535 02e0 82E0      		ldi r24,lo8(2)
 536 02e2 0E94 0000 		call rs485_tx_autoreset
 537               	.LVL29:
 197:src/rs485_slave.c ****                 uart1_putc(data[length+0]);
 538               		.loc 1 197 0
 539 02e6 8AEA      		ldi r24,lo8(-86)
 540 02e8 0E94 0000 		call uart1_putc
 541               	.LVL30:
 198:src/rs485_slave.c ****                 uart1_putc(data[length+1]);
 542               		.loc 1 198 0
 543 02ec E091 0000 		lds r30,length.1931
 544 02f0 F0E0      		ldi r31,0
 545 02f2 E050      		subi r30,lo8(-(data.1932))
 546 02f4 F040      		sbci r31,hi8(-(data.1932))
 547 02f6 8081      		ld r24,Z
 548 02f8 0E94 0000 		call uart1_putc
 549               	.LVL31:
 199:src/rs485_slave.c **** 
 550               		.loc 1 199 0
 551 02fc E091 0000 		lds r30,length.1931
 552 0300 F0E0      		ldi r31,0
 553 0302 E050      		subi r30,lo8(-(data.1932))
 554 0304 F040      		sbci r31,hi8(-(data.1932))
 555 0306 8181      		ldd r24,Z+1
 556 0308 0E94 0000 		call uart1_putc
 557               	.LVL32:
 558 030c 00C0      		rjmp .L43
 559               	.L31:
 560               	.LBB23:
 561               	.LBB22:
 285:src/rs485_slave.c ****     {
 286:src/rs485_slave.c ****         memcpy(msgstore_complete_update.characters,data,80);
 562               		.loc 1 286 0
 563 030e 80E5      		ldi r24,lo8(80)
 564 0310 E0E0      		ldi r30,lo8(data.1932)
 565 0312 F0E0      		ldi r31,hi8(data.1932)
 566 0314 A0E0      		ldi r26,lo8(msgstore_complete_update)
 567 0316 B0E0      		ldi r27,hi8(msgstore_complete_update)
 568               		0:
 569 0318 0190      		ld r0,Z+
 570 031a 0D92      		st X+,r0
 571 031c 8A95      		dec r24
 572 031e 01F4      		brne 0b
 573               	.LVL33:
 574 0320 20E0      		ldi r18,0
 575 0322 30E0      		ldi r19,0
 576               	.LVL34:
 577               	.L32:
 578 0324 A901      		movw r20,r18
 579 0326 4050      		subi r20,lo8(-(data.1932))
 580 0328 5040      		sbci r21,hi8(-(data.1932))
 581 032a 8901      		movw r16,r18
 582 032c 0050      		subi r16,lo8(-(msgstore_complete_update+80))
 583 032e 1040      		sbci r17,hi8(-(msgstore_complete_update+80))
 584 0330 DA01      		movw r26,r20
 585 0332 A05B      		subi r26,-80
 586 0334 BF4F      		sbci r27,-1
 587               	.LBB21:
 287:src/rs485_slave.c ****         for(uint8_t i=0; i < 4; i++)
 288:src/rs485_slave.c ****         {
 289:src/rs485_slave.c ****             msgstore_complete_update.dots[i] = ((uint32_t)data[80   +i*4])<<24;
 588               		.loc 1 289 0
 589 0336 6C91      		ld r22,X
 590 0338 1196      		adiw r26,1
 290:src/rs485_slave.c ****             msgstore_complete_update.dots[i] |= ((uint32_t)data[81  +i*4])<<16;
 591               		.loc 1 290 0
 592 033a 8C91      		ld r24,X
 593 033c 90E0      		ldi r25,0
 594 033e A0E0      		ldi r26,0
 595 0340 B0E0      		ldi r27,0
 596 0342 DC01      		movw r26,r24
 597 0344 9927      		clr r25
 598 0346 8827      		clr r24
 599 0348 B62B      		or r27,r22
 600 034a BA01      		movw r22,r20
 601 034c 6D5A      		subi r22,-83
 602 034e 7F4F      		sbci r23,-1
 291:src/rs485_slave.c ****             msgstore_complete_update.dots[i] |= ((uint32_t)data[82  +i*4])<<8;
 292:src/rs485_slave.c ****             msgstore_complete_update.dots[i] |= ((uint32_t)data[83  +i*4])<<0;
 603               		.loc 1 292 0
 604 0350 FB01      		movw r30,r22
 605 0352 6081      		ld r22,Z
 606 0354 862B      		or r24,r22
 607 0356 4E5A      		subi r20,-82
 608 0358 5F4F      		sbci r21,-1
 291:src/rs485_slave.c ****             msgstore_complete_update.dots[i] |= ((uint32_t)data[82  +i*4])<<8;
 609               		.loc 1 291 0
 610 035a FA01      		movw r30,r20
 611 035c 4081      		ld r20,Z
 612               		.loc 1 292 0
 613 035e 942B      		or r25,r20
 614 0360 F801      		movw r30,r16
 615 0362 8083      		st Z,r24
 616 0364 9183      		std Z+1,r25
 617 0366 A283      		std Z+2,r26
 618 0368 B383      		std Z+3,r27
 619 036a 2C5F      		subi r18,-4
 620 036c 3F4F      		sbci r19,-1
 287:src/rs485_slave.c ****         {
 621               		.loc 1 287 0
 622 036e 2031      		cpi r18,16
 623 0370 3105      		cpc r19,__zero_reg__
 624 0372 01F4      		brne .L32
 625 0374 00C0      		rjmp .L33
 626               	.LVL35:
 627               	.L12:
 628               	.LBE21:
 629               	.LBE22:
 630               	.LBE23:
 208:src/rs485_slave.c ****             {
 631               		.loc 1 208 0
 632 0376 2091 0000 		lds r18,multibytecounter.1925
 633 037a 9927      		clr r25
 634               	.LVL36:
 635 037c 2111      		cpse r18,__zero_reg__
 636 037e 00C0      		rjmp .L34
 210:src/rs485_slave.c ****                 multibytecounter++;
 637               		.loc 1 210 0
 638 0380 1092 0000 		sts new_id.1928,__zero_reg__
 639 0384 8093 0000 		sts new_id.1928+1,r24
 211:src/rs485_slave.c ****             }
 640               		.loc 1 211 0
 641 0388 81E0      		ldi r24,lo8(1)
 642 038a 8093 0000 		sts multibytecounter.1925,r24
 643 038e 00C0      		rjmp .L8
 644               	.L34:
 215:src/rs485_slave.c ****                 process_new_id(new_id);
 645               		.loc 1 215 0
 646 0390 E090 0000 		lds r14,new_id.1928
 647 0394 F090 0000 		lds r15,new_id.1928+1
 648 0398 E82A      		or r14,r24
 649 039a F92A      		or r15,r25
 650 039c F092 0000 		sts new_id.1928+1,r15
 651 03a0 E092 0000 		sts new_id.1928,r14
 652               	.LVL37:
 653               	.LBB24:
 654               	.LBB25:
 235:src/rs485_slave.c **** 
 655               		.loc 1 235 0
 656 03a4 F092 0000 		sts id+1,r15
 657 03a8 E092 0000 		sts id,r14
 237:src/rs485_slave.c ****     char t[50];
 658               		.loc 1 237 0
 659 03ac B701      		movw r22,r14
 660 03ae 80E0      		ldi r24,lo8(stored_id)
 661 03b0 90E0      		ldi r25,hi8(stored_id)
 662 03b2 0E94 0000 		call eeprom_write_word
 663               	.LVL38:
 239:src/rs485_slave.c ****     uart_puts(t);
 664               		.loc 1 239 0
 665 03b6 8091 0000 		lds r24,id+1
 666 03ba 8F93      		push r24
 667 03bc 8091 0000 		lds r24,id
 668 03c0 8F93      		push r24
 669 03c2 80E0      		ldi r24,lo8(.LC10)
 670 03c4 90E0      		ldi r25,hi8(.LC10)
 671 03c6 9F93      		push r25
 672 03c8 8F93      		push r24
 673 03ca BE01      		movw r22,r28
 674 03cc 6F5F      		subi r22,-1
 675 03ce 7F4F      		sbci r23,-1
 676 03d0 6B01      		movw r12,r22
 677 03d2 7F93      		push r23
 678 03d4 6F93      		push r22
 679 03d6 0E94 0000 		call sprintf
 680               	.LVL39:
 240:src/rs485_slave.c **** 
 681               		.loc 1 240 0
 682 03da C601      		movw r24,r12
 683 03dc 0E94 0000 		call uart_puts
 684               	.LVL40:
 243:src/rs485_slave.c ****     buffer[1] = 0xFF;
 685               		.loc 1 243 0
 686 03e0 8AEA      		ldi r24,lo8(-86)
 687 03e2 8BAB      		std Y+51,r24
 244:src/rs485_slave.c ****     buffer[2] = 0xFF;
 688               		.loc 1 244 0
 689 03e4 8FEF      		ldi r24,lo8(-1)
 690 03e6 8CAB      		std Y+52,r24
 245:src/rs485_slave.c ****     buffer[3] = new_id>>8;
 691               		.loc 1 245 0
 692 03e8 8DAB      		std Y+53,r24
 246:src/rs485_slave.c ****     buffer[4] = new_id;
 693               		.loc 1 246 0
 694 03ea FEAA      		std Y+54,r15
 247:src/rs485_slave.c ****     buffer[5] = new_id>>8;
 695               		.loc 1 247 0
 696 03ec EFAA      		std Y+55,r14
 248:src/rs485_slave.c ****     buffer[6] = new_id;
 697               		.loc 1 248 0
 698 03ee F8AE      		std Y+56,r15
 249:src/rs485_slave.c ****     buffer[7] = HW_TYPE>>8;
 699               		.loc 1 249 0
 700 03f0 E9AE      		std Y+57,r14
 250:src/rs485_slave.c ****     buffer[8] = HW_TYPE;
 701               		.loc 1 250 0
 702 03f2 1AAE      		std Y+58,__zero_reg__
 251:src/rs485_slave.c ****     uint16_t checksum=calc_checksum(buffer,9);
 703               		.loc 1 251 0
 704 03f4 1BAF      		std Y+59,r17
 705               	.LVL41:
 706 03f6 FE01      		movw r30,r28
 707 03f8 F396      		adiw r30,51
 708 03fa 9E01      		movw r18,r28
 709 03fc 245C      		subi r18,-60
 710 03fe 3F4F      		sbci r19,-1
 711 0400 0F90      		pop __tmp_reg__
 712 0402 0F90      		pop __tmp_reg__
 713 0404 0F90      		pop __tmp_reg__
 714 0406 0F90      		pop __tmp_reg__
 715 0408 0F90      		pop __tmp_reg__
 716 040a 0F90      		pop __tmp_reg__
 717               	.LBB26:
 718               	.LBB27:
 266:src/rs485_slave.c **** 
 719               		.loc 1 266 0
 720 040c 80E0      		ldi r24,0
 721 040e 90E0      		ldi r25,0
 722               	.LVL42:
 723               	.L35:
 724               	.LBB28:
 270:src/rs485_slave.c ****     }
 725               		.loc 1 270 0
 726 0410 4191      		ld r20,Z+
 727 0412 8427      		eor r24,r20
 268:src/rs485_slave.c ****     {
 728               		.loc 1 268 0
 729 0414 E217      		cp r30,r18
 730 0416 F307      		cpc r31,r19
 731 0418 01F4      		brne .L35
 732               	.LBE28:
 733               	.LBE27:
 734               	.LBE26:
 253:src/rs485_slave.c ****     buffer[10] = checksum;
 735               		.loc 1 253 0
 736 041a 1CAE      		std Y+60,__zero_reg__
 254:src/rs485_slave.c **** 
 737               		.loc 1 254 0
 738 041c 8DAF      		std Y+61,r24
 256:src/rs485_slave.c ****     for(uint8_t i=5; i < 11; i++)
 739               		.loc 1 256 0
 740 041e 82E0      		ldi r24,lo8(2)
 741 0420 0E94 0000 		call rs485_tx_autoreset
 742               	.LVL43:
 743 0424 7E01      		movw r14,r28
 744               	.LVL44:
 745 0426 78E3      		ldi r23,56
 746 0428 E70E      		add r14,r23
 747 042a F11C      		adc r15,__zero_reg__
 748 042c 8E01      		movw r16,r28
 749 042e 025C      		subi r16,-62
 750 0430 1F4F      		sbci r17,-1
 751               	.LVL45:
 752               	.L36:
 753               	.LBB29:
 259:src/rs485_slave.c ****     }
 754               		.loc 1 259 0
 755 0432 F701      		movw r30,r14
 756 0434 8191      		ld r24,Z+
 757 0436 7F01      		movw r14,r30
 758 0438 0E94 0000 		call uart1_putc
 759               	.LVL46:
 257:src/rs485_slave.c ****     {
 760               		.loc 1 257 0
 761 043c E016      		cp r14,r16
 762 043e F106      		cpc r15,r17
 763 0440 01F4      		brne .L36
 764               	.LVL47:
 765               	.L43:
 766               	.LBE29:
 767               	.LBE25:
 768               	.LBE24:
 217:src/rs485_slave.c ****             }
 769               		.loc 1 217 0
 770 0442 1092 0000 		sts state.1924,__zero_reg__
 771 0446 00C0      		rjmp .L8
 772               	.LVL48:
 773               	.L18:
 223:src/rs485_slave.c ****                 state=WAITING_FOR_START;
 774               		.loc 1 223 0
 775 0448 8091 0000 		lds r24,ignorecounter.1926
 776 044c 9091 0000 		lds r25,ignorecounter.1926+1
 777               	.LVL49:
 778 0450 0097      		sbiw r24,0
 779 0452 01F4      		brne .L37
 224:src/rs485_slave.c **** 
 780               		.loc 1 224 0
 781 0454 1092 0000 		sts state.1924,__zero_reg__
 782               	.L37:
 226:src/rs485_slave.c **** 
 783               		.loc 1 226 0
 784 0458 0197      		sbiw r24,1
 785 045a 9093 0000 		sts ignorecounter.1926+1,r25
 786 045e 8093 0000 		sts ignorecounter.1926,r24
 787               	.L8:
 788               	/* epilogue start */
 789               	.LBE17:
 790               	.LBE16:
  79:src/rs485_slave.c **** 
 791               		.loc 1 79 0
 792 0462 ED96      		adiw r28,61
 793 0464 0FB6      		in __tmp_reg__,__SREG__
 794 0466 F894      		cli
 795 0468 DEBF      		out __SP_H__,r29
 796 046a 0FBE      		out __SREG__,__tmp_reg__
 797 046c CDBF      		out __SP_L__,r28
 798 046e DF91      		pop r29
 799 0470 CF91      		pop r28
 800 0472 1F91      		pop r17
 801 0474 0F91      		pop r16
 802 0476 FF90      		pop r15
 803 0478 EF90      		pop r14
 804 047a DF90      		pop r13
 805 047c CF90      		pop r12
 806 047e 0895      		ret
 807               		.cfi_endproc
 808               	.LFE5:
 810               		.local	new_id.1928
 811               		.comm	new_id.1928,2,1
 812               		.local	data.1932
 813               		.comm	data.1932,257,1
 814               		.local	length.1931
 815               		.comm	length.1931,1,1
 816               		.local	type.1930
 817               		.comm	type.1930,1,1
 818               		.local	msg_id.1929
 819               		.comm	msg_id.1929,2,1
 820               		.local	ignorecounter.1926
 821               		.comm	ignorecounter.1926,2,1
 822               		.local	package_id.1927
 823               		.comm	package_id.1927,2,1
 824               		.local	multibytecounter.1925
 825               		.comm	multibytecounter.1925,1,1
 826               		.local	state.1924
 827               		.comm	state.1924,1,1
 828               		.comm	msgstore_complete_update,96,1
 829               	.global	autoreset
 830               		.section .bss
 833               	autoreset:
 834 0000 0000 0000 		.zero	4
 835               	.global	clock
 838               	clock:
 839 0004 0000 0000 		.zero	4
 840               	.global	id
 841               		.data
 844               	id:
 845 0000 FFFF      		.word	-1
 846               	.global	stored_id
 847               		.section	.eeprom,"aw",@progbits
 850               	stored_id:
 851 0000 0000      		.zero	2
 852               		.text
 853               	.Letext0:
 854               		.file 2 "/usr/lib/avr/include/stdint.h"
 855               		.file 3 "src/rs485_slave.h"
 856               		.file 4 "<built-in>"
 857               		.file 5 "src/uart.h"
 858               		.file 6 "/usr/lib/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rs485_slave.c
     /tmp/ccv54cBw.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccv54cBw.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccv54cBw.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccv54cBw.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccv54cBw.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccv54cBw.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccv54cBw.s:13     .text:0000000000000000 rs485_tx
     /tmp/ccv54cBw.s:32     .text:0000000000000008 rs485_tx_autoreset
     /tmp/ccv54cBw.s:838    .bss:0000000000000004 clock
     /tmp/ccv54cBw.s:833    .bss:0000000000000000 autoreset
     /tmp/ccv54cBw.s:72     .text:000000000000003c rs485_rx
     /tmp/ccv54cBw.s:96     .text:0000000000000044 rs485_init
     /tmp/ccv54cBw.s:850    .eeprom:0000000000000000 stored_id
     /tmp/ccv54cBw.s:844    .data:0000000000000000 id
     /tmp/ccv54cBw.s:162    .text:0000000000000078 rs485_run
     /tmp/ccv54cBw.s:825    .bss:0000000000000114 state.1924
     /tmp/ccv54cBw.s:823    .bss:0000000000000113 multibytecounter.1925
     /tmp/ccv54cBw.s:821    .bss:0000000000000111 package_id.1927
     /tmp/ccv54cBw.s:819    .bss:000000000000010f ignorecounter.1926
     /tmp/ccv54cBw.s:817    .bss:000000000000010d msg_id.1929
     /tmp/ccv54cBw.s:813    .bss:000000000000010b length.1931
     /tmp/ccv54cBw.s:815    .bss:000000000000010c type.1930
     /tmp/ccv54cBw.s:811    .bss:000000000000000a data.1932
                            *COM*:0000000000000060 msgstore_complete_update
                             .bss:0000000000000008 new_id.1928

UNDEFINED SYMBOLS
uart1_init
eeprom_read_word
uart_puts
uart1_getc
sprintf
uart1_putc
eeprom_write_word
__do_copy_data
__do_clear_bss
